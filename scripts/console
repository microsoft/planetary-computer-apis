#!/bin/bash

set -e

if [[ "${CI}" ]]; then
    set -x
fi

function usage() {
    echo -n \
        "Usage: $(basename "$0") [--stac, --tiler, --funcs, --db, --deploy]
Runs a console in the development container

--stac - Drops into a dev stac service container. Default.
--tiler - Drops into a dev tiler service container.
--funcs - Drops into a funcs service container.
--db - Drops into a db container
--deploy - Drops into a deploy container
"
}

# Parse args
DEV_STAC_CONSOLE=1
while [[ "$#" > 0 ]]; do case $1 in
    --db)
        DB_CONSOLE=1
        shift
        ;;
    --stac)
        DEV_STAC_CONSOLE=1
        shift
        ;;
    --tiler)
        DEV_TILER_CONSOLE=1
        shift
        ;;
    --funcs)
        FUNCS_CONSOLE=1
        shift
        ;;
    --deploy)
        DEPLOY_CONSOLE=1
        shift
        ;;
    --help)
        usage
        exit 0
        shift
        ;;
    *)
        usage "Unknown parameter passed: $1"
        shift
        shift
        ;;
    esac done

if [ "${BASH_SOURCE[0]}" = "${0}" ]; then

    if [[ "${DB_CONSOLE}" ]]; then
        docker compose \
            -f docker-compose.yml \
            exec database psql postgres://username:password@database:5432/postgis

        exit 0
    fi

    if [[ "${DEV_TILER_CONSOLE}" ]]; then
        docker compose \
            -f docker-compose.yml \
            -f docker-compose.dev.yml \
            run --rm \
            tiler-dev /bin/bash

        exit 0
    fi

    if [[ "${FUNCS_CONSOLE}" ]]; then
        docker compose \
            -f docker-compose.yml \
            run --rm \
            funcs /bin/bash

        exit 0
    fi

    if [[ "${DEPLOY_CONSOLE}" ]]; then
        GIT_COMMIT="$(git rev-parse --short HEAD)" docker compose \
            -f deployment/docker-compose.yml \
            run --rm \
            deploy /bin/bash

        exit 0
    fi

    if [[ "${DEV_STAC_CONSOLE}" ]]; then
        docker compose \
            -f docker-compose.yml \
            -f docker-compose.dev.yml \
            run --rm \
            stac-dev /bin/bash

        exit 0
    fi

fi
